import { G6Event, IG6GraphEvent, Item, ICombo } from '@antv/g6-core';
declare const _default: {
    getDefaultCfg(): object;
    getEvents(): {
        [x: string]: string;
    };
    validationCombo(item: ICombo): boolean;
    onTouchStart(e: IG6GraphEvent): void;
    onTouchMove(e: IG6GraphEvent): void;
    /**
     * 开始拖动节点
     * @param evt
     */
    onDragStart(evt: IG6GraphEvent): void;
    /**
     * 持续拖动节点
     * @param evt
     */
    onDrag(evt: IG6GraphEvent): void;
    /**
     * 拖动结束，设置拖动元素capture为true，更新元素位置，如果是拖动涉及到 combo，则更新 combo 结构
     * @param evt
     */
    onDragEnd(evt: IG6GraphEvent): void;
    /**
     * 拖动过程中将节点放置到 combo 上
     * @param evt
     */
    onDropCombo(evt: IG6GraphEvent): void;
    onDropCanvas(evt: IG6GraphEvent): void;
    /**
     * 拖动放置到某个 combo 中的子 node 上
     * @param evt
     */
    onDropNode(evt: IG6GraphEvent): void;
    /**
     * 将节点拖入到 Combo 中
     * @param evt
     */
    onDragEnter(evt: IG6GraphEvent): void;
    /**
     * 将节点从 Combo 中拖出
     * @param evt
     */
    onDragLeave(evt: IG6GraphEvent): void;
    updatePositions(evt: IG6GraphEvent, restore: boolean): void;
    /**
     * 更新节点
     * @param item 拖动的节点实例
     * @param evt
     */
    update(item: Item, evt: IG6GraphEvent, restore: boolean): void;
    /**
     * 限流更新节点
     * @param item 拖动的节点实例
     * @param evt
     */
    debounceUpdate: () => void;
    /**
     * 更新拖动元素时的delegate
     * @param {Event} e 事件句柄
     * @param {number} x 拖动单个元素时候的x坐标
     * @param {number} y 拖动单个元素时候的y坐标
     */
    updateDelegate(e: any): void;
    /**
     * 计算delegate位置，包括左上角左边及宽度和高度
     * @memberof ItemGroup
     * @return {object} 计算出来的delegate坐标信息及宽高
     */
    calculationGroupPosition(evt: IG6GraphEvent): {
        x: number;
        y: number;
        width: number;
        height: number;
        minX: number;
        minY: number;
    };
};
export default _default;
